# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

jobs:

- job: linux
  pool:
    vmImage: 'ubuntu-22.04'

  steps:
  - checkout: self
    submodules: recursive

  - script: |
      set -o errexit -o pipefail
      sudo apt-get update
      sudo apt-get install --yes --no-install-recommends llvm clang-format clang-tidy clang libomp-dev python3 python3-setuptools libboost-dev xz-utils bzip2 lrzip cmake meson ninja-build

      wget https://github.com/samtools/samtools/releases/download/1.16.1/samtools-1.16.1.tar.bz2
      tar -xjf samtools-1.16.1.tar.bz2
      cd samtools-1.16.1
      ./configure
      make
      sudo make install
    displayName: 'Install required software'

  - script: meson setup build && cd build && ninja
    displayName: 'Build the project'

  - script: cd build && ninja clang-format-check
    displayName: 'Run clang-format'

  - script: cd build && ninja clang-tidy
    displayName: 'Run clang-tidy'

  - script: |
      cd build && meson test --repeat=5
      if [[ $? -ne 0 ]]; then
        cat meson-logs/testlog.txt
        exit 1
      fi
    displayName: 'Run tests'

  - script: |
      cd build && ninja sanitize-undefined
      if [[ $? -ne 0 ]]; then
        cat __build-sanitize-undefined/meson-logs/testlog.txt
        exit 1
      fi
    displayName: 'Sanitize undefined'

  - script: |
      set -o errexit -o pipefail
      ./compile
      cd build && ninja test-wrappers
    displayName: 'Test wrappers'

- job: macos
  pool:
    vmImage: 'macOS-12'

  steps:
  - checkout: self
    submodules: recursive

  - script: |
      set -o errexit -o pipefail
      brew update
      brew install llvm@14 boost samtools coreutils xz lrzip meson ninja cmake
      export PATH="$(brew --prefix llvm)/bin:$PATH"
      alias clang-format=clang-format-14
      alias clang-tidy=clang-tidy-14
    displayName: 'Install required software'

  - script: meson setup build && cd build && ninja
    displayName: 'Build the project'

  - script: cd build && ninja clang-format-check
    displayName: 'Run clang-format'

  - script: cd build && ninja clang-tidy
    displayName: 'Run clang-tidy'

  - script: |
      cd build && meson test --repeat=5
      if [[ $? -ne 0 ]]; then
        cat meson-logs/testlog.txt
        exit 1
      fi
    displayName: 'Run tests'

  - script: |
      cd build && ninja sanitize-undefined
      if [[ $? -ne 0 ]]; then
        cat __build-sanitize-undefined/meson-logs/testlog.txt
        exit 1
      fi
    displayName: 'Sanitize undefined'

  - script: |
      set -o errexit -o pipefail
      ./compile
      cd build && ninja test-wrappers
    displayName: 'Test wrappers'
